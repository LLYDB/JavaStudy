插入式注解处理API(JSR 269)提供一套标准API来处理Annotations(JSR 175),实际上
JSR 269不仅仅用来处理Annotation,我觉得更强大的功能是它建立了Java 语言本身的一个
模型,它把method, package, constructor, type, variable, enum, 
annotation等Java语言元素映射为Types和Elements(两者有什么区别?), 从而将Java
语言的语义映射成为对象, 我们可以在javax.lang.model包下面可以看到这些类. 所以我们可
以利用JSR 269提供的API来构建一个功能丰富的元编程(metaprogramming)环境. JSR 
269用Annotation Processor在编译期间而不是运行期间处理Annotation, Annotation
 Processor相当于编译器的一个插件,所以称为插入式注解处理.如果Annotation Processor
 处理Annotation时(执行process方法)产生了新的Java代码,编译器会再调用一次Annotation
  Processor,如果第二次处理还有新代码产生,就会接着调用Annotation Processor,
  直到没有新代码产生为止.每执行一次process()方法被称为一个"round",这样整个Annotation 
  processing过程可以看作是一个round的序列. JSR 269主要被设计成为针对Tools或者容器的API.
   举个例子,我们想建立一套基于Annotation的单元测试框架(如TestNG),在测试类里面用Annotation
   来标识测试期间需要执行的测试方法,如下所示:

