泛型的自动擦除：
class MyValue<T> {
	private T value;
	public void setValue(T newValue) {
		this.value = newValue;
	}
	public T getValue() {
		return this.value;
	}
}
如果在调用MyValue类时没有类型参数指定类型，则自动进行擦除后相当于如下代码.
class MyValue<T> {
	private Object value;
	public void setValue(Object newValue) {
		this.value = newValue;
	}
	public Object getValue() {
		return this.value;
	}
}

为什么要有擦除？
若现在使用的是新版本的类库，类库中的类时候用了泛型，而有一段旧的没有使用泛型的源代码需要在新的类库
下运行。由于旧代码中没有使用泛型，因此系统会对其所调用的类进行擦除，擦除后的类进行擦除，擦除后的
类正好相当于原来旧类库中的类，旧的代码可以直接编译运行。

1：为什么泛型的类型不能为基础类型，如int,long,double等。

2：不能在数组中声明使用泛型，下面代码是不能通过编译的
MyValue<String>[] mv = new MyValue<String>[10];

