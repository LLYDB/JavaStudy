第一：SAX，DOM，JAXP，JDOM，DOM4各是什么

1、sax、dom是两种对xml文档进行分析的方法（没有具体的实现，只有接口）所以不是解释器，如果光有他们，
你是完成不了对xml文档的处理的。sax的包是org.xml.saxdom的包是org.w3c.dom包的名称很重要，
它有助于你理解他们之间的关系。

2、 jaxp是api，他封装了sax\dom两种接口。并在sax\dom的基础之上，作了一套比较简单的api以供开发人员使用。
jaxp的包是 javax.xml.parsers可以看看jaxp的源文件，它的文件中包含了对sax或者dom的引用（import）
jaxp也不是具体的实现，他只是一套api。如果你仅仅有jaxp那是无法工作的（其实jaxp只是完成对sax、dom的包装，
生成了 DocumentBuilderFactory\DocumentBuilder和SAXParserFactory SAXParser。也就是
设计模式中的工厂模式，他的好处就是具体的对象（ 解释器）建立由子类完成）

3、xerces解释器（号称地球上最快的xml解释器）在xerces中对jaxp中定义的SAXParser SAXParserFactory 
DocumentBuilder DocumentBuilderFactory进行了继承（extends）对应SAXParserImpl SAXParserFactoryImpl
 DocumentBuilderImpl DocumentBuilderFactoryImpl这就是为什么你的classpath中只要有xerces.jar
 （其中包含了sax dom jaxp ）和 xercesImpl.jar就可以的原因了.

4、什么时候可以用别的解释器 比如crimson呢他也是和xerces一样 是解释器，很简单，用crimson.jar 替代xercesImpl.jar

5、 jdom和dom4j W3C的DOM标准API难用的让人想撞墙，于是有一帮人开发Java专用的XML API目的是为了便于使用，这就是jdom
的由来，开发到一半的时候，另一部分人又分了出来，他们有自己的想法，于是他们就去开发dom4j，形成了今天这样两个API，至于他们之间的
性能，jdom全面惨败，dom4j大获全胜。我觉得jdom和dom4j就相当于sax/dom+jaxp，具体的解释器可以选择。







